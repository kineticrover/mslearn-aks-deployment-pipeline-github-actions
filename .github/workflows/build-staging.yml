# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.0.0
        
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        uses: docker/login-action@v3.2.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }} # optional
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }} # optional
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }} # optional
          # Specifies whether the given registry is ECR (auto, true or false)
          
      - name: Build and push staging images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        uses: docker/build-push-action@v5.3.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: . # optional
          # Push is a shorthand for --output=type=registry
          push: true # optional, default is false
          # List of tags
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest # optional
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v2
              
      - name: Helm tool installer
        uses: Azure/setup-helm@v3
        with:
          # Version of helm
          version: v3.3.1 # default is latest
          
      - name: Sign in to Azure with OIDC
        uses: Azure/login@v1.5.1
        with:
          # ClientId of the Azure Service principal created.
          client-id: ${{ secrets.AZURE_CLIENT_ID }} # optional
          # TenantId of the Azure Service principal created.
          tenant-id: ${{ secrets.AZURE_TENANT_ID }} # optional
          # Azure subscriptionId
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # optional
      - name: Azure Kubernetes Set Context
        uses: Azure/k8s-set-context@v3.0
        with:
          # Azure resource group name
          resource-group: ${{ secrets.RESOURCE_GROUP }} # optional
          # Azure connected cluster name
          cluster-name: ${{ secrets.CLUSTER_NAME }} # optional
          
                
                            
